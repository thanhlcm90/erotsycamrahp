#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using PharmacyStore.Models;


namespace PharmacyStore.Models	
{
	public partial class PharmacyStoreModel : OpenAccessContext, IPharmacyStoreModelUnitOfWork
	{
		private static string connectionStringName = @"PharmacyStoreConnection";
			
		private static BackendConfiguration backend = GetBackendConfiguration();
		
			
		private static MetadataSource metadataSource = XmlMetadataSource.FromAssemblyResource("EntitiesModel.rlinq");
	
		public PharmacyStoreModel()
			:base(connectionStringName, backend, metadataSource)
		{ }
		
		public PharmacyStoreModel(string connection)
			:base(connection, backend, metadataSource)
		{ }
	
		public PharmacyStoreModel(BackendConfiguration backendConfiguration)
			:base(connectionStringName, backendConfiguration, metadataSource)
		{ }
			
		public PharmacyStoreModel(string connection, MetadataSource metadataSource)
			:base(connection, backend, metadataSource)
		{ }
		
		public PharmacyStoreModel(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
			:base(connection, backendConfiguration, metadataSource)
		{ }
			
		public IQueryable<Webpages_Role> Webpages_Roles 
		{
	    	get
	    	{
	        	return this.GetAll<Webpages_Role>();
	    	}
		}
		
		public IQueryable<Webpages_OAuthMembership> Webpages_OAuthMemberships 
		{
	    	get
	    	{
	        	return this.GetAll<Webpages_OAuthMembership>();
	    	}
		}
		
		public IQueryable<Webpages_Membership> Webpages_Memberships 
		{
	    	get
	    	{
	        	return this.GetAll<Webpages_Membership>();
	    	}
		}
		
		public IQueryable<SY_USER> SY_USERs 
		{
	    	get
	    	{
	        	return this.GetAll<SY_USER>();
	    	}
		}
		
		public IQueryable<SY_STORE> SY_STOREs 
		{
	    	get
	    	{
	        	return this.GetAll<SY_STORE>();
	    	}
		}
		
		public IQueryable<LS_PRESERVE> LS_PRESERVEs 
		{
	    	get
	    	{
	        	return this.GetAll<LS_PRESERVE>();
	    	}
		}
		
		public IQueryable<LS_PRESCRIPTION_DRUG> LS_PRESCRIPTION_DRUGs 
		{
	    	get
	    	{
	        	return this.GetAll<LS_PRESCRIPTION_DRUG>();
	    	}
		}
		
		public IQueryable<LS_PRESCRIPTION> LS_PRESCRIPTIONs 
		{
	    	get
	    	{
	        	return this.GetAll<LS_PRESCRIPTION>();
	    	}
		}
		
		public IQueryable<LS_NATION> LS_NATIONs 
		{
	    	get
	    	{
	        	return this.GetAll<LS_NATION>();
	    	}
		}
		
		public IQueryable<LS_ELEMENT> LS_ELEMENTs 
		{
	    	get
	    	{
	        	return this.GetAll<LS_ELEMENT>();
	    	}
		}
		
		public IQueryable<LS_DRUG_GROUP> LS_DRUG_GROUPs 
		{
	    	get
	    	{
	        	return this.GetAll<LS_DRUG_GROUP>();
	    	}
		}
		
		public IQueryable<LS_DRUG> LS_DRUGs 
		{
	    	get
	    	{
	        	return this.GetAll<LS_DRUG>();
	    	}
		}
		
		public IQueryable<LS_DOCTOR> LS_DOCTORs 
		{
	    	get
	    	{
	        	return this.GetAll<LS_DOCTOR>();
	    	}
		}
		
		public IQueryable<LS_DISEASE> LS_DISEASEs 
		{
	    	get
	    	{
	        	return this.GetAll<LS_DISEASE>();
	    	}
		}
		
		public IQueryable<LS_CUSTOMER_GROUP> LS_CUSTOMER_GROUPs 
		{
	    	get
	    	{
	        	return this.GetAll<LS_CUSTOMER_GROUP>();
	    	}
		}
		
		public IQueryable<LS_CUSTOMER> LS_CUSTOMERs 
		{
	    	get
	    	{
	        	return this.GetAll<LS_CUSTOMER>();
	    	}
		}
		
		public IQueryable<LS_CALCUNIT> LS_CALCUNITs 
		{
	    	get
	    	{
	        	return this.GetAll<LS_CALCUNIT>();
	    	}
		}
		
		public IQueryable<LS_CABINET> LS_CABINETs 
		{
	    	get
	    	{
	        	return this.GetAll<LS_CABINET>();
	    	}
		}
		
		public static BackendConfiguration GetBackendConfiguration()
		{
			BackendConfiguration backend = new BackendConfiguration();
			backend.Backend = "MsSql";
			backend.ProviderName = "System.Data.SqlClient";
			return backend;
		}
	}

	public interface IPharmacyStoreModelUnitOfWork : IUnitOfWork
	{
		IQueryable<Webpages_Role> Webpages_Roles 
		{ 
			get;
		}

		IQueryable<Webpages_OAuthMembership> Webpages_OAuthMemberships 
		{ 
			get;
		}

		IQueryable<Webpages_Membership> Webpages_Memberships 
		{ 
			get;
		}

		IQueryable<SY_USER> SY_USERs 
		{ 
			get;
		}

		IQueryable<SY_STORE> SY_STOREs 
		{ 
			get;
		}

		IQueryable<LS_PRESERVE> LS_PRESERVEs 
		{ 
			get;
		}

		IQueryable<LS_PRESCRIPTION_DRUG> LS_PRESCRIPTION_DRUGs 
		{ 
			get;
		}

		IQueryable<LS_PRESCRIPTION> LS_PRESCRIPTIONs 
		{ 
			get;
		}

		IQueryable<LS_NATION> LS_NATIONs 
		{ 
			get;
		}

		IQueryable<LS_ELEMENT> LS_ELEMENTs 
		{ 
			get;
		}

		IQueryable<LS_DRUG_GROUP> LS_DRUG_GROUPs 
		{ 
			get;
		}

		IQueryable<LS_DRUG> LS_DRUGs 
		{ 
			get;
		}

		IQueryable<LS_DOCTOR> LS_DOCTORs 
		{ 
			get;
		}

		IQueryable<LS_DISEASE> LS_DISEASEs 
		{ 
			get;
		}

		IQueryable<LS_CUSTOMER_GROUP> LS_CUSTOMER_GROUPs 
		{ 
			get;
		}

		IQueryable<LS_CUSTOMER> LS_CUSTOMERs 
		{ 
			get;
		}

		IQueryable<LS_CALCUNIT> LS_CALCUNITs 
		{ 
			get;
		}

		IQueryable<LS_CABINET> LS_CABINETs 
		{ 
			get;
		}

	}
}
#pragma warning restore 1591

