@model PharmacyStore.Models.LS_DOCTOR

@{
    // Đặt title cho View
    ViewBag.Title = "Danh sách bác sĩ";        
}

@*Tạo Toolbar*@
@CommonFunction.BuildToolbar(ToolbarItem.Create, ToolbarItem.Edit, ToolbarItem.Delete, ToolbarItem.Active, ToolbarItem.Deactive)

@*Tạo 1 Partial đặt tên là _FormPartial để chứa tất cả các Control nhập liệu
Render Partial vào 1 thẻ div*@
<div id="FormEdit">
    @Html.Partial("_FormPartial")
</div>
@Html.Partial("_GridPartial")

<script>
    //Trạng thái của View, tham khảo trong CommonMessage
    var formState;

    $(document).ready(function () {
        // Mặc định Disable tất cả Control
        EnabledInputs(false);
    });

    // Function sự kiện của Toolbar (phải khai báo cho giống)
    function ToolbarCommand(command) {
        //command: trả về command của Toolbar khi click, command lấy trong CommonMessage
        switch (command) {
            case "@CommonMessage.TOOLBARITEM_CREATE":
                // Chuyển trạng thái View sang Edit
                formState = "@CommonMessage.STATE_NEW";

                // Enable tất cả control
                EnabledInputs(true);

                // Xóa trắng tất cả Input
                ClearAllInput("FormEdit");

                // Focus Input đầu tiên
                FocusFirstInput();
                break;
            case "@CommonMessage.TOOLBARITEM_EDIT":
                // Chuyển trạng thái View sang Edit
                formState = "@CommonMessage.STATE_EDIT";

                // Enable tất cả control
                EnabledInputs(true);

                // Focus Input đầu tiên
                FocusFirstInput();
                break;
            case "@CommonMessage.TOOLBARITEM_CANCEL":
                //Load lại nội dung từ Grid
                onSelectedChange("");

                // Disable tất cả Control
                EnabledInputs(false);
                break;
            case "@CommonMessage.TOOLBARITEM_SAVE":
                // Chuyển toàn bộ nội dung nhập liệu của các control trên form thành dữ liệu Text
                var data = $("form").serialize();

                // Kiểm tra trạng thái View, tùy từng trạng thái chuyển hướng SAVE khác nhau
                switch (formState) {
                    case "@CommonMessage.STATE_NEW":
                        // Lấy đường dẫn của Action Create trong Controller
                        var actionURL = '@Url.Action("Create")';
                        $.appAjax({
                            type: "POST",
                            url: actionURL,
                            data: data,
                            success: function (data) {
                                // Sau khi Save thành công, data sẽ là Id model vừa tạo
                                // Gọi hàm ChangeToolbarState để đổi trạng thái Toolbar
                                // Tham khải hàm ChangeToolbarState trong Coding Convention
                                ChangeToolbarState(false);

                                // Disable tất cả Control
                                EnabledInputs(false);

                                // Grid load lại nội dung
                                var grid = $("#Grid").data("kendoGrid");
                                grid.dataSource.fetch();

                                // Set lại Id của Model vừa tạo
                                $("#Id").val(data).change();
                            }
                        });
                        break;
                    case "@CommonMessage.STATE_EDIT":
                        // Lấy đường dẫn của Action Edit trong Controller
                        var actionURL = '@Url.Action("Edit")';
                        $.appAjax({
                            type: "POST",
                            url: actionURL,
                            data: data,
                            success: function (data) {
                                // Sau khi Save thành công, không quan tâm giá trị trả về, gọi hàm ChangeToolbarState để đổi trạng thái Toolbar
                                // Tham khải hàm ChangeToolbarState trong Coding Convention
                                ChangeToolbarState(false);

                                // Disable tất cả Control
                                EnabledInputs(false);

                                // Grid load lại nội dung
                                var grid = $("#Grid").data("kendoGrid");
                                grid.dataSource.fetch();
                            }
                        });
                        break;
                }
                break;
            case "@CommonMessage.TOOLBARITEM_DELETE":
                var grid = $("#Grid").data("kendoGrid");
                if (grid.select().length == 0) {
                    ShowAlert('Bạn chưa chọn dữ liệu nào.');
                }
                ShowConfirm('Bạn có muốn xóa dữ liệu này không?',
                    function () {
                        // Chọn có
                        // Lấy đường dẫn của Action Delete trong Controller
                        var actionURL = '@Url.Action("Delete")';
                        // Lấy Id của Item muốn xóa
                        var selectedItem = grid.dataItem(grid.select());
                        var data = "Id=" + selectedItem.Id;

                        $.appAjax({
                            type: "POST",
                            url: actionURL,
                            data: data,
                            success: function (data) {
                                // Sau khi Xóa thành công, không quan tâm giá trị trả về
                                // Xóa rỗng nội dung Id, để sau khi Grid load xong, sẽ tự động chọn Row đầu tiên
                                $("#Id").val("").change();

                                // Grid load lại nội dung
                                var grid = $("#Grid").data("kendoGrid");
                                grid.dataSource.fetch();
                            }
                        });
                    });
                break;
        }
    }

</script>
